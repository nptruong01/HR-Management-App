/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Giaodien;
import Connect.MySQLConnection;
import com.mysql.jdbc.CallableStatement;
import java.util.Calendar;
import java.util.Date;
import com.mysql.jdbc.Statement;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MSI-VN
 */
public class DanhsachNV extends javax.swing.JFrame {

    /**
     * Creates new form AddCa
     */
    MySQLConnection connection = new MySQLConnection();
    DefaultTableModel tableModel;
    public DanhsachNV() {
        initComponents();
//        tableModel = (DefaultTableModel)DS_CaLam.getModel();
        tableModel = (DefaultTableModel) jTableTTNV.getModel();
        HienThiTTNV();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Exit1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTTNV = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        inputFind = new javax.swing.JFormattedTextField();
        jButtonSortID = new javax.swing.JButton();
        jButtonSortName = new javax.swing.JButton();
        jButtonSortCv = new javax.swing.JButton();
        LocChucVu = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();

        jLabel9.setText("jLabel9");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setBackground(new java.awt.Color(204, 0, 153));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("TÌM KIẾM NHÂN VIÊN");

        Exit1.setBackground(new java.awt.Color(255, 51, 51));
        Exit1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Exit1.setText("X");
        Exit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Exit1ActionPerformed(evt);
            }
        });

        jTableTTNV.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jTableTTNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Loại NV", "Mã NV", "Họ Và Tên", "Ngày Sinh", "Số Điện Thoại", "Địa Chỉ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableTTNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableTTNVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableTTNV);
        if (jTableTTNV.getColumnModel().getColumnCount() > 0) {
            jTableTTNV.getColumnModel().getColumn(2).setResizable(false);
            jTableTTNV.getColumnModel().getColumn(2).setPreferredWidth(300);
        }

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel18.setText("Tìm Nhân Viên");

        inputFind.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        inputFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFindActionPerformed(evt);
            }
        });
        inputFind.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputFindKeyReleased(evt);
            }
        });

        jButtonSortID.setBackground(new java.awt.Color(102, 102, 102));
        jButtonSortID.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonSortID.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSortID.setText("Sắp Xếp Theo Mã");
        jButtonSortID.setMaximumSize(new java.awt.Dimension(219, 33));
        jButtonSortID.setMinimumSize(new java.awt.Dimension(219, 33));
        jButtonSortID.setPreferredSize(new java.awt.Dimension(151, 22));
        jButtonSortID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSortIDActionPerformed(evt);
            }
        });

        jButtonSortName.setBackground(new java.awt.Color(102, 102, 102));
        jButtonSortName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonSortName.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSortName.setText("Sắp Xếp Theo Tên");
        jButtonSortName.setMinimumSize(new java.awt.Dimension(151, 22));
        jButtonSortName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSortNameActionPerformed(evt);
            }
        });

        jButtonSortCv.setBackground(new java.awt.Color(102, 102, 102));
        jButtonSortCv.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonSortCv.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSortCv.setText("Sắp Xếp Theo Chức Vụ");
        jButtonSortCv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSortCvActionPerformed(evt);
            }
        });

        LocChucVu.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        LocChucVu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Trưởng Phòng", "Nhân Viên", "Nhân Viên Lâu Năm", "Thực Tập" }));
        LocChucVu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LocChucVuActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setText("Lọc Chức Vụ Nhân Viên:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonSortID, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(jButtonSortCv)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(LocChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1023, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(jButtonSortName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(313, 313, 313)
                        .addComponent(Exit1)
                        .addGap(24, 24, 24))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(37, 37, 37)
                        .addComponent(inputFind, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(353, 353, 353))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Exit1)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(inputFind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jButtonSortName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSortID, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSortCv)
                    .addComponent(LocChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTableTTNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTTNVMouseClicked
        // TODO add your handling code here:
//        DefaultTableModel tableModel = (DefaultTableModel) jTableTTNV.getModel();
//
//        String manv = tableModel.getValueAt(jTableTTNV.getSelectedRow(), 1).toString();
//        String macv = tableModel.getValueAt(jTableTTNV.getSelectedRow(), 0).toString();
//        String tennv = tableModel.getValueAt(jTableTTNV.getSelectedRow(), 2).toString();
//        String ngaysinh = tableModel.getValueAt(jTableTTNV.getSelectedRow(), 3).toString();
//        String NS[] = ngaysinh.split("/");
//        String sodt = tableModel.getValueAt(jTableTTNV.getSelectedRow(), 4).toString();
//        String diachi = tableModel.getValueAt(jTableTTNV.getSelectedRow(), 5).toString();
//
//        inputMa.setText(manv);
//        BoxMaCV.setSelectedItem(macv);
//        inputName.setText(tennv);
//        boxNgay.setSelectedItem(NS[0]);
//        boxThang.setSelectedItem(NS[1]);
//        boxNam.setSelectedItem(NS[2]);
//        inputNumPhone.setText(sodt);
//        inputAddress.setText(diachi);
    }//GEN-LAST:event_jTableTTNVMouseClicked

    private void Exit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Exit1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_Exit1ActionPerformed

    private void inputFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFindActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputFindActionPerformed

    private void inputFindKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputFindKeyReleased
        // TODO add your handling code here:
        Connection conn = (Connection) connection.ConnectMySQL();
        ResultSet rs = null;
        String input = null;
        try {
            input = String.valueOf(inputFind.getText());
            //luu cac ten nhavien vao mot danh sach
            if (input.equals("")) {
                HienThiTTNV();
            } else {
                CallableStatement cStmt = (CallableStatement) conn.prepareCall("SELECT ma_nv,ma_cv,ten_nv,ngaysinh,sodt,diachi  FROM `nhanvien` WHERE ma_nv=? and trangthai=0");
                cStmt.setString(1, input);
                rs = cStmt.executeQuery();
                tableModel.setRowCount(0);
                while (rs.next()) {
                    String manv = rs.getString("ma_nv");
                    String macv = rs.getString("ma_cv");
                    String tennv = rs.getString("ten_nv");
                    String dateNS = rs.getString("ngaysinh");
                    String NS[] = dateNS.split("-");
                    String ngaysinh = NS[2] + "/" + NS[1] + "/" + NS[0];
                    String sodt = rs.getString("sodt");
                    String diachi = rs.getString("diachi");
                    //String ngaysinh = dateNS.getDay()+"/"+dateNS.getMonth()+""+dateNS.getYear();
                    tableModel = (DefaultTableModel) jTableTTNV.getModel();
                    tableModel.addRow(new String[]{macv, manv, tennv, ngaysinh, sodt, diachi});
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Không có thông tin nhân viên bạn cần tìm", "ERROR", 1);
        }
    }//GEN-LAST:event_inputFindKeyReleased

    private void jButtonSortIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSortIDActionPerformed
        // TODO add your handling code here:
        Connection conn = connection.ConnectMySQL();
        try {
            CallableStatement cStmt = (CallableStatement) conn.prepareCall("SELECT ma_nv,ma_cv,ten_nv,ngaysinh,sodt,diachi  FROM `nhanvien` WHERE trangthai=0 ORDER BY ma_nv ASC;");
            ResultSet rs = cStmt.executeQuery();
            tableModel.setRowCount(0);
            while (rs.next()) {
                String manv = rs.getString("ma_nv");
                String macv = rs.getString("ma_cv");
                String tennv = rs.getString("ten_nv");
                String dateNS = rs.getString("ngaysinh");
                String NS[] = dateNS.split("-");
                String ngaysinh = NS[2] + "/" + NS[1] + "/" + NS[0];
                String sodt = rs.getString("sodt");
                String diachi = rs.getString("diachi");
                tableModel = (DefaultTableModel) jTableTTNV.getModel();
                tableModel.addRow(new String[]{macv, manv, tennv, ngaysinh, sodt, diachi});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButtonSortIDActionPerformed

    private void jButtonSortNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSortNameActionPerformed
        // TODO add your handling code here:
        Connection conn = connection.ConnectMySQL();

        try {
            CallableStatement cStmt = (CallableStatement) conn.prepareCall("SELECT ma_nv,ma_cv,ten_nv,ngaysinh,sodt,diachi  FROM `nhanvien` WHERE trangthai=0 ORDER BY ten_nv ASC;");
            ResultSet rs = cStmt.executeQuery();
            tableModel.setRowCount(0);
            while (rs.next()) {
                String manv = rs.getString("ma_nv");
                String macv = rs.getString("ma_cv");
                String tennv = rs.getString("ten_nv");
                String dateNS = rs.getString("ngaysinh");
                String NS[] = dateNS.split("-");
                String ngaysinh = NS[2] + "/" + NS[1] + "/" + NS[0];
                String sodt = rs.getString("sodt");
                String diachi = rs.getString("diachi");
                //String ngaysinh = dateNS.getDay()+"/"+dateNS.getMonth()+""+dateNS.getYear();
                tableModel = (DefaultTableModel) jTableTTNV.getModel();
                tableModel.addRow(new String[]{macv, manv, tennv, ngaysinh, sodt, diachi});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButtonSortNameActionPerformed

    private void jButtonSortCvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSortCvActionPerformed
        // TODO add your handling code here:
        Connection conn = connection.ConnectMySQL();
        try {
            CallableStatement cStmt = (CallableStatement) conn.prepareCall("SELECT ma_nv,ma_cv,ten_nv,ngaysinh,sodt,diachi  FROM `nhanvien` WHERE trangthai=0 ORDER BY ma_cv ASC;");
            ResultSet rs = cStmt.executeQuery();
            tableModel.setRowCount(0);
            while (rs.next()) {
                String manv = rs.getString("ma_nv");
                String macv = rs.getString("ma_cv");
                String tennv = rs.getString("ten_nv");
                String dateNS = rs.getString("ngaysinh");
                String NS[] = dateNS.split("-");
                String ngaysinh = NS[2] + "/" + NS[1] + "/" + NS[0];
                String sodt = rs.getString("sodt");
                String diachi = rs.getString("diachi");
                //String ngaysinh = dateNS.getDay()+"/"+dateNS.getMonth()+""+dateNS.getYear();
                tableModel = (DefaultTableModel) jTableTTNV.getModel();
                tableModel.addRow(new String[]{macv, manv, tennv, ngaysinh, sodt, diachi});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButtonSortCvActionPerformed

    private void LocChucVuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LocChucVuActionPerformed
        // TODO add your handling code here:
        String chucvu = String.valueOf(LocChucVu.getSelectedItem()).toString().trim();
        Connection conn = connection.ConnectMySQL();
        try {
            String CV = chucvu(chucvu);
            CallableStatement cStmt = (CallableStatement) conn.prepareCall("SELECT ma_nv,ma_cv,ten_nv,ngaysinh,sodt,diachi  FROM `nhanvien` WHERE ma_cv=? AND trangthai=0;");
            cStmt.setString(1, CV);
            ResultSet rs = cStmt.executeQuery();
            tableModel.setRowCount(0);
            while (rs.next()) {
                String manv = rs.getString("ma_nv");
                String macv = rs.getString("ma_cv");
                String tennv = rs.getString("ten_nv");
                String dateNS = rs.getString("ngaysinh");
                String NS[] = dateNS.split("-");
                String ngaysinh = NS[2] + "/" + NS[1] + "/" + NS[0];
                String sodt = rs.getString("sodt");
                String diachi = rs.getString("diachi");
                tableModel = (DefaultTableModel) jTableTTNV.getModel();
                tableModel.addRow(new String[]{macv, manv, tennv, ngaysinh, sodt, diachi});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_LocChucVuActionPerformed
//    private String chuyendoiBuoi(String Buoi){
//        String buoi = "";
//        switch (Buoi){
//            case "Sáng": {
//                buoi = "S";
//                break;
//            }
//            case "Chiều":{
//                buoi = "C";
//                break;
//            }
//            case "Tối":{
//                buoi = "T";
//                break;
//            }
//        }
//        return buoi;
//    }
//    private boolean laNamNhuan(int Nam){
//        if((Nam % 4 == 0 && Nam % 100 != 0) || Nam % 400 == 0)
//            return true;
//        else return false;
//    }
//    
//    int tinhSoNgay(int thang, int nam){
//        int  songay = 0;
//        switch(thang){
//            case 1:
//            case 3:
//            case 5:
//            case 7:
//            case 8:
//            case 10:
//            case 12:
//                songay = 31;
//                break;
//            case 4:
//            case 6:
//            case 9:
//            case 11:
//                songay = 30;
//                break;
//            case 2:{
//                if(laNamNhuan(nam)) songay = 29;
//                else songay = 28;
//                break;
//            }
//        }
//        return songay;
//    }
//    //kiem tra ngya hop le
//    private boolean laNgayHopLe(int nDay, int nMonth, int nYear){
//	// Kiểm tra năm
//	if (nYear < 0){
//            return false; // Ngày không còn hợp lệ nữa!
//	}
//	// Kiểm tra tháng
//	if (nMonth < 1 || nMonth > 12){
//            return false; // Ngày không còn hợp lệ nữa!
//	}
//	// Kiểm tra ngày
//        if (nDay < 1 || nDay > tinhSoNgay(nMonth, nYear)){
//            return false; // Ngày không còn hợp lệ nữa!
//	}
//	return true; // Trả về trạng thái cuối cùng...
//    }
    
    //reset 
//    private void reset(){
//        inputMa.setText("");
//        BoxMaCV.setSelectedIndex(0);
//        inputName.setText("");
//        boxNgay.setSelectedIndex(0);
//        boxThang.setSelectedIndex(0);
//        boxNam.setSelectedIndex(0);
//        inputNumPhone.setText("");
//        inputAddress.setText("");
//    } 
        
//    private boolean SauNgayHienTai(int ngay, int thang, int nam){
//       Calendar c = Calendar.getInstance(); 
//  
//        // set Month 
//        // MONTH starts with 0 i.e. ( 0 - Jan) 
//        c.set(Calendar.MONTH, (thang-1)); 
//  
//        // set Date 
//        c.set(Calendar.DATE, ngay); 
//  
//        // set Year 
//        c.set(Calendar.YEAR, nam); 
//  
//        // creating a date object with specified time. 
//        Date dateOne = c.getTime(); 
//  
//        // creating a date of object 
//        // storing the current date 
//        Date currentDate = new Date(); 
//  
//        //System.out.print("Is currentDate after date one : "); 
//  
//        // if currentDate is after dateOne 
//        //System.out.println(currentDate.after(dateOne));
//        return currentDate.after(dateOne);
//    }    
    private String chucvu(String cv){
        String CV = "";
        switch (cv){
            case "Trưởng Phòng": {CV =  "TN"; break;}
            case "Nhân Viên" : {CV =  "PC"; break;}
            case "Thực Tập": {CV =  "LC"; break;}
            case "Nhân Viên Lâu Năm" : {CV =  "PV"; break;}
        }
        return CV;
    }
        
    private void HienThiTTNV() {
        DefaultTableModel tableModel = (DefaultTableModel) jTableTTNV.getModel();
        tableModel.setRowCount(0);
        Connection conn = connection.ConnectMySQL();
        try {
            CallableStatement cStmt = null;
            cStmt = (CallableStatement) conn.prepareCall("SELECT ma_nv,ma_cv,ten_nv,ngaysinh,sodt,diachi FROM `nhanvien` WHERE trangthai=0;");
            ResultSet rs = cStmt.executeQuery();
            while (rs.next()) {
                String manv = rs.getString("ma_nv");
                String macv = rs.getString("ma_cv");
                String tennv = rs.getString("ten_nv");
                String dateNS = rs.getString("ngaysinh");
                String NS[] = dateNS.split("-");
                String ngaysinh = NS[2] + "/" + NS[1] + "/" + NS[0];
                String sodt = rs.getString("sodt");
                String diachi = rs.getString("diachi");
                //String ngaysinh = dateNS.getDay()+"/"+dateNS.getMonth()+""+dateNS.getYear();
                tableModel.addRow(new String[]{macv, manv, tennv, ngaysinh, sodt, diachi});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    
    


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DanhsachNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DanhsachNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DanhsachNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DanhsachNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DanhsachNV().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Exit1;
    private javax.swing.JComboBox<String> LocChucVu;
    private javax.swing.JFormattedTextField inputFind;
    private javax.swing.JButton jButtonSortCv;
    private javax.swing.JButton jButtonSortID;
    private javax.swing.JButton jButtonSortName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableTTNV;
    // End of variables declaration//GEN-END:variables
}
