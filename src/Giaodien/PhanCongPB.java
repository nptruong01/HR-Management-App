/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Giaodien;
import Connect.MySQLConnection;
import com.mysql.jdbc.CallableStatement;
import java.util.Calendar;
import java.util.Date;
import com.mysql.jdbc.Statement;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MSI-VN
 */
public class PhanCongPB extends javax.swing.JFrame {

    /**
     * Creates new form AddCa
     */
    MySQLConnection connection = new MySQLConnection();
    DefaultTableModel tableModel;
    public PhanCongPB() {
        initComponents();
        tableModel = (DefaultTableModel)DS_PB.getModel();
        ShowTC_CaLam();
        showTC_TTNV();
        txtid.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtid = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        DS_PB = new javax.swing.JTable();
        TC_Box_CV = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        DS_nhanvien = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        Exit1 = new javax.swing.JButton();
        txtpb = new javax.swing.JComboBox<>();
        txtmanv = new javax.swing.JFormattedTextField();
        TC_UPdate = new javax.swing.JButton();

        jLabel9.setText("jLabel9");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setBackground(new java.awt.Color(204, 0, 153));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("PHÂN CÔNG PHÒNG BAN");

        jLabel2.setBackground(new java.awt.Color(102, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Tên Phòng Ban");

        jLabel3.setBackground(new java.awt.Color(102, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("ID");

        jLabel4.setBackground(new java.awt.Color(102, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Mã Nhân Viên");

        txtid.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        DS_PB.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        DS_PB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Mã Nhân Viên", "Họ Và Tên", "Tên Phòng Ban"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DS_PB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DS_PBMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(DS_PB);
        if (DS_PB.getColumnModel().getColumnCount() > 0) {
            DS_PB.getColumnModel().getColumn(2).setResizable(false);
            DS_PB.getColumnModel().getColumn(2).setPreferredWidth(150);
            DS_PB.getColumnModel().getColumn(3).setResizable(false);
            DS_PB.getColumnModel().getColumn(3).setPreferredWidth(150);
        }

        TC_Box_CV.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        TC_Box_CV.setForeground(new java.awt.Color(51, 51, 51));
        TC_Box_CV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Trưởng Phòng", "Nhân Viên", "Nhân Viên Lâu Năm", "Thực Tập" }));
        TC_Box_CV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TC_Box_CVMouseClicked(evt);
            }
        });
        TC_Box_CV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TC_Box_CVActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Lọc Theo Chức Vụ:");

        jLabel11.setBackground(new java.awt.Color(102, 255, 255));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 0, 204));
        jLabel11.setText("DANH SÁCH PHÒNG BAN");

        DS_nhanvien.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        DS_nhanvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Chức Vụ", "Mã Nhân Viên", "Họ Và Tên"
            }
        ));
        DS_nhanvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DS_nhanvienMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(DS_nhanvien);

        jLabel12.setBackground(new java.awt.Color(102, 255, 255));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 0, 204));
        jLabel12.setText("DANH SÁCH NHÂN VIÊN");

        jButton1.setBackground(new java.awt.Color(204, 204, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("Thêm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Exit1.setBackground(new java.awt.Color(255, 51, 51));
        Exit1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Exit1.setText("X");
        Exit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Exit1ActionPerformed(evt);
            }
        });

        txtpb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtpb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Phòng Nhân Sự", "Phòng Hành Chính", "Phòng Kỹ Thuật", "Phòng Chăm Sóc Khách Hàng" }));
        txtpb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpbActionPerformed(evt);
            }
        });

        txtmanv.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        TC_UPdate.setBackground(new java.awt.Color(204, 204, 255));
        TC_UPdate.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        TC_UPdate.setText("Sửa ");
        TC_UPdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TC_UPdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(401, 401, 401)
                        .addComponent(Exit1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 807, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(45, 45, 45)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(TC_UPdate, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtpb, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtmanv, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(51, 51, 51)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 802, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel12)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(TC_Box_CV, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addGap(19, 19, 19)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Exit1)
                    .addComponent(jLabel1))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addComponent(TC_Box_CV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(310, 310, 310)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel12)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(57, 57, 57)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtmanv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtpb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(64, 64, 64)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(TC_UPdate))))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Exit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Exit1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_Exit1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Connection con;
        PreparedStatement insert;
        Connection con1;
        ResultSet rs1;

//        String id =txtid.getText();
        String MANV =txtmanv.getText();
//        String Ngay =TC_Ngay.getSelectedItem().toString();
//        String Thang =TC_Thang.getSelectedItem().toString();
//        String Nam =TC_Nam.getSelectedItem().toString();
        String PB =txtpb.getSelectedItem().toString();
        String pb = chuyendoiphongban(PB);
//        String NgayThang = Nam+"-"+Thang+"-"+Ngay;
//        String Ghichu = TC_ghichu.getText();

//        boolean chekcdate = SauNgayHienTai(Integer.parseInt(Ngay) , Integer.parseInt(Thang), Integer.parseInt(Nam));
        //kiem tra rong
        //kiem tra ngay hop le TH: 30/2
        //kiem tra sau ngay hien tai
        if(MANV.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Yêu cầu nhập đầy đủ thông tin!!!", "Error", 1);
        }else{
            boolean checktrung = true;
            try {
                Class.forName("com.mysql.jdbc.Driver");
                con1 = DriverManager.getConnection("jdbc:mysql://localhost/doan_dbms","root","");
                insert = con1.prepareStatement("select ma_nv from quatrinhpb WHERE   ma_nv=?  ");
                //            insert.setString(1, TC_MaNV.getText());
                //            insert.setString(2,txtpass.getText());
                insert.setString(1,MANV);
//                insert.setString(2,phongban);
//                insert.setString(3,phongban);
                rs1=insert.executeQuery();
                if(rs1.next())
                {
                    JOptionPane.showMessageDialog(null, "Nhân Viên Này Hiện Đã Có Phòng Ban");
                    //         new MainJFrame().setVisible(true);
                }
                else
                {

                    try {
                        // TODO add your handling code here:
                        Class.forName("com.mysql.jdbc.Driver");
                        con = DriverManager.getConnection("jdbc:mysql://localhost/doan_dbms","root","");
                        insert = con.prepareStatement("insert into quatrinhpb(ma_nv,MaPB)values(?,?)");
                        insert.setString(1,MANV);
                        insert.setString(2,pb);
//                        insert.setString(3,phongban);
//                        insert.setString(4,Ghichu);

                        insert.executeUpdate();
                        JOptionPane.showMessageDialog(this, "Sucsessfully Saved");
                        //            autoID();
                        //            txtfname.setText("");
                        //            txtlname.setText("");
                        //            txtstreet.setText("");
                        //            txtcity.setText("");
                        //            jComboBox1.setSelectedIndex(-1);
                        //            txtphone.setText("");
                        //            txtemail.setText("");
                        //            txtfname.requestFocus();

                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(PhanCongPB.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(PhanCongPB.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    ShowTC_CaLam();
                }

            } catch (Exception e) {

                System.out.println("Failed " + e);

            }
           

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void DS_nhanvienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DS_nhanvienMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tableModel= (DefaultTableModel)DS_nhanvien.getModel();
        String manv = tableModel.getValueAt(DS_nhanvien.getSelectedRow(), 1).toString();
        txtmanv.setText(manv);
    }//GEN-LAST:event_DS_nhanvienMouseClicked

    private void TC_Box_CVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TC_Box_CVActionPerformed
        // TODO add your handling code here:
        tableModel.setRowCount(0);
        String chucvu = String.valueOf(TC_Box_CV.getSelectedItem()).toString().trim();
        Connection conn = connection.ConnectMySQL();
        Statement Stmt = null;
        ResultSet rs = null;
        try {
            String CV = chucvu(chucvu);
            CallableStatement cStmt = (CallableStatement) conn.prepareCall("select ma_nv,ma_cv,ten_nv from nhanvien where ma_cv=? AND trangthai=0");
            cStmt.setString(1, CV);
            rs = cStmt.executeQuery();
            while(rs.next()){
                String manv = rs.getString("ma_nv");
                String macv = rs.getString("ma_cv");
                String tennv = rs.getString("ten_nv");
                //String ngaysinh = dateNS.getDay()+"/"+dateNS.getMonth()+""+dateNS.getYear();
                tableModel= (DefaultTableModel)DS_nhanvien.getModel();
                tableModel.addRow(new String[]{macv, manv, tennv});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        ShowTC_CaLam();
    }//GEN-LAST:event_TC_Box_CVActionPerformed

    private void TC_Box_CVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TC_Box_CVMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_TC_Box_CVMouseClicked

    private void txtpbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpbActionPerformed

    private void DS_PBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DS_PBMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tableModel= (DefaultTableModel)DS_PB.getModel();
        String id = tableModel.getValueAt(DS_PB.getSelectedRow(), 0).toString();
        String manv = tableModel.getValueAt(DS_PB.getSelectedRow(), 1).toString();
        String pb = tableModel.getValueAt(DS_PB.getSelectedRow(), 3).toString();
//        String buoi = tableModel.getValueAt(Table_Edit.getSelectedRow(), 5).toString();
//        if(pb.equals("1")){
//            pb = "Phòng Nhân Sự";
//        }else if(pb.equals("2")){
//            pb = "Phòng Hành Chính";
//        }else if(pb.equals("3")){
//            pb = "Phòng Kỹ Thuật";
//        }else{
//            pb = "Phòng Chăm Sóc Khách Hàng";
//        }

        
        txtid.setText(id);
        txtmanv.setText(manv);
        txtpb.setSelectedItem(pb);

    }//GEN-LAST:event_DS_PBMouseClicked

    private void TC_UPdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TC_UPdateActionPerformed
        Connection conn = connection.ConnectMySQL();
        Statement Stmt = null;
        String id = String.valueOf(txtid.getText()).trim();
        String manv = String.valueOf(txtmanv.getText()).trim();
//        String PB =txtpb.getSelectedItem().toString();
//        String pb = chuyendoiphongban(PB);
//        String ngay = String.valueOf(TC_Ngay.getSelectedItem().toString().trim());
//        String thang = String.valueOf(TC_Thang.getSelectedItem().toString().trim());
//        String nam = String.valueOf(TC_Nam.getSelectedItem().toString().trim());
        String PB = String.valueOf(txtpb.getSelectedItem().toString().trim());
        String pb = chuyendoiphongban(PB);
//        String ghichu = TC_ghichu.getText();
//        String NgayThang = nam+"-"+thang+"-"+ngay;
//        boolean chekcdate = SauNgayHienTai(Integer.parseInt(ngay) , Integer.parseInt(thang), Integer.parseInt(nam));
        if(manv.equals("") || pb.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Yêu cầu nhập đầy đủ thông tin!!!", "Error", 1);
        }else{
            boolean checktrung = true;
            try {

                CallableStatement cSmt1 = (CallableStatement) conn.prepareCall("select ma_nv,MaPB from quatrinhpb WHERE   ma_nv=? and MaPB=? ");
                cSmt1.setString(1, manv);
                cSmt1.setString(2, pb);
//                cSmt1.setString(3, buoi);
                ResultSet rs_checkid = cSmt1.executeQuery();
                if(rs_checkid.next()){
                    JOptionPane.showMessageDialog(rootPane, "Yêu cầu bạn chỉnh sửa ngày và buổi làm", "Erro", 1);
                    checktrung = false;
                }else{
                    try{

                        Connection con1;
                        PreparedStatement insert;
                        Class.forName("com.mysql.jdbc.Driver");
                        con1 = DriverManager.getConnection("jdbc:mysql://localhost/doan_dbms","root","");
                        insert = con1.prepareStatement("update quatrinhpb set ma_nv= ? , MaPB=?  where id= ?");
                        insert.setString(1,manv);
                        insert.setString(2,pb);
                        insert.setString(3,id);

                        insert.executeUpdate();
                        JOptionPane.showMessageDialog(this, "Cập Nhật Ca Làm");

                        txtid.setText("");
                        txtmanv.setText("");
                        txtpb.setSelectedIndex(0);

                    }catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        ShowTC_CaLam();
    }//GEN-LAST:event_TC_UPdateActionPerformed

   
    
    //reset 
    private void reset(){
//        TC_MaNV.setText("");
//        TC_Ngay.setSelectedIndex(0);
//        TC_Thang.setSelectedIndex(0);
//        TC_Nam.setSelectedIndex(0);
//        TC_BoxBuoi.setSelectedItem(0);
//        TC_ghichu.setText("");
    } 
    private String chuyendoiphongban(String pb){
        String PB = "";
        switch (pb){
            case "Phòng Nhân Sự": {PB =  "1"; break;}
            case "Phòng Hành Chính" : {PB =  "2"; break;}
            case "Phòng Kỹ Thuật": {PB =  "3"; break;}
            case "Phòng Chăm Sóc Khách Hàng" : {PB =  "4"; break;}
        }
        return PB;
    }        
    
    private String chucvu(String cv){
        String CV = "";
        switch (cv){
            case "Trưởng Phòng": {CV =  "TN"; break;}
            case "Nhân Viên" : {CV =  "PC"; break;}
            case "Thực Tập": {CV =  "LC"; break;}
            case "Nhân Viên Lâu Năm" : {CV =  "PV"; break;}
        }
        return CV;
    }
        private void ShowTC_CaLam(){
        DefaultTableModel tableModel= (DefaultTableModel)DS_PB.getModel();
        tableModel.setRowCount(0);
        Connection conn = connection.ConnectMySQL();
        Statement Stmt = null;
        ResultSet rs = null;
        try {
            CallableStatement cStmt = (CallableStatement) conn.prepareCall("select qt.id,nv.ma_nv, nv.ten_nv,pb.TenPB\n" +
                                                    "from quatrinhpb as qt\n" +
                                                    "inner join nhanvien AS nv on nv.ma_nv = qt.ma_nv\n" +
                                                    "inner join phongban pb on pb.MaPB = qt.MaPB");
            rs = cStmt.executeQuery();
            while(rs.next()){
                String id = rs.getString("id");
                String manv = rs.getString("ma_nv");
                String tennv = rs.getString("ten_nv");
                String tenpb = rs.getString("TenPB");
//                 String dateNS = rs.getString("ngaylam");
//                String NS[] = dateNS.split("-");
//                String ngaylam = NS[2]+"/"+NS[1]+"/"+NS[0];
//                String buoi = rs.getString("buoi");
                tableModel.addRow(new String[]{id, manv, tennv,tenpb});
            } 
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void showTC_TTNV(){
        DefaultTableModel tableModel= (DefaultTableModel)DS_nhanvien.getModel();
        tableModel.setRowCount(0);
        Connection conn = connection.ConnectMySQL();
        Statement Stmt = null;
        ResultSet rs = null;
        try {
            CallableStatement cStmt = (CallableStatement) conn.prepareCall("select ma_nv,ma_cv,ten_nv from nhanvien where trangthai=0");
            rs = cStmt.executeQuery();
            while(rs.next()){
                String manv = rs.getString("ma_nv");
                String macv = rs.getString("ma_cv");
                String tennv = rs.getString("ten_nv");
                tableModel.addRow(new String[]{macv, manv, tennv});
            } 
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        
        
//        Connection con1;
//        PreparedStatement insert;
//        int CC;
//        try {
//            Class.forName("com.mysql.jdbc.Driver");
//            con1 = DriverManager.getConnection("jdbc:mysql://localhost/doan_dbms","root","");
//            
//            insert = con1.prepareStatement("select ma_nv,ma_cv,ten_nv from nhanvien ");
//             ResultSet Rs = insert.executeQuery();
//            
//   
//            ResultSetMetaData RSMD = Rs.getMetaData();
//            CC = RSMD.getColumnCount();
//            DefaultTableModel DFT = (DefaultTableModel) DS_nhanvien.getModel();
//            DFT.setRowCount(0);
//
//            while (Rs.next()) {
//                Vector v2 = new Vector();
//           
//                for (int ii = 1; ii <= CC; ii++) {
//                    v2.add(Rs.getString("ma_nv"));
//                    v2.add(Rs.getString("ma_cv"));
//                    v2.add(Rs.getString("ten_nv"));
//    
//                }
//
//                DFT.addRow(v2);
//            }
//        } catch (Exception e) {
//        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhanCongPB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhanCongPB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhanCongPB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhanCongPB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PhanCongPB().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DS_PB;
    private javax.swing.JTable DS_nhanvien;
    private javax.swing.JButton Exit1;
    private javax.swing.JComboBox<String> TC_Box_CV;
    private javax.swing.JButton TC_UPdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JFormattedTextField txtid;
    private javax.swing.JFormattedTextField txtmanv;
    private javax.swing.JComboBox<String> txtpb;
    // End of variables declaration//GEN-END:variables
}
